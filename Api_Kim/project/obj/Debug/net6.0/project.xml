<?xml version="1.0"?>
<doc>
    <assembly>
        <name>project</name>
    </assembly>
    <members>
        <member name="M:project.Controllers.CourseController.GetAllCourses">
             <summary>
             Получение всех курсов
             </summary>
             <remarks>
             Пример запроса:
            
                 GET /api/Course
            
             </remarks>
             <returns>Список всех курсов</returns>
        </member>
        <member name="M:project.Controllers.CourseController.GetCourseById(System.Int32)">
            <summary>
            Получение информации о курсе по ID
            </summary>
            <remarks>
            Пример запроса:
            
                GET /api/Course/1
            
            </remarks>
            <param name="id">ID курса</param>
            <returns>Информация о курсе</returns>
        </member>
        <member name="M:project.Controllers.CourseController.CreateCourse(Domain.Contracts.CourseContracts.CreateCourseRequest)">
            <summary>
            Создание нового курса
            </summary>
            <remarks>
            Пример запроса:
            
                POST /api/Course
                {
                   "NameCourse" : "Программирование на C#",
                   "Description" : "Курс по основам программирования на C#",
                   "IdCategory" : 1
                }
            
            </remarks>
            <param name="courseDto">Модель курса</param>
            <returns>Созданный курс</returns>
        </member>
        <member name="M:project.Controllers.CourseController.UpdateCourse(System.Int32,Domain.Contracts.CourseContracts.CreateCourseRequest)">
            <summary>
            Обновление курса
            </summary>
            <remarks>
            Пример запроса:
            
                PUT /api/Course/1
                {
                   "NameCourse" : "Программирование на C# - Обновленный",
                   "Description" : "Обновленная информация по курсу"
                }
            
            </remarks>
            <param name="id">ID курса</param>
            <param name="courseDto">Модель для обновления курса</param>
            <returns>Обновленный курс</returns>
        </member>
        <member name="M:project.Controllers.CourseController.DeleteCourse(System.Int32)">
            <summary>
            Удаление курса
            </summary>
            <remarks>
            Пример запроса:
            
                DELETE /api/Course/1
            
            </remarks>
            <param name="id">ID курса</param>
            <returns>Результат операции</returns>
        </member>
        <member name="M:project.Controllers.CourseController.EnrollUserInCourse(System.Int32,Domain.Contracts.CourseContracts.EnrollUserRequest)">
             <summary>
             Записать пользователя на курс
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /api/Course/1/enroll
                 {
                     "userId": 1
                 }
             </remarks>
        </member>
        <member name="M:project.Controllers.CourseController.UnenrollUserFromCourse(System.Int32,System.Int32)">
             <summary>
             Удалить пользователя с курса
             </summary>
             <remarks>
             Пример запроса:
            
                 DELETE /api/Course/1/unenroll/1
             </remarks>
        </member>
        <member name="M:project.Controllers.FileController.GetFilesByUser(System.Int32)">
            <summary>
            Получение файлов пользователя
            </summary>
            <remarks>
            Пример запроса:
            
                GET /api/File/1
            
            </remarks>
            <param name="userId">ID пользователя</param>
            <returns>Список файлов пользователя</returns>
        </member>
        <member name="M:project.Controllers.FileController.UploadFile(Domain.Contracts.FileContracts.UploadFileRequest)">
            <summary>
            Загрузка файла
            </summary>
            <remarks>
            Пример запроса:
            
                POST /api/File/upload
                {
                   "FileName" : "example.jpg",
                   "FilePath" : "base64encodeddata",
                   "FileType" : "image/jpeg",
                   "IdUser" : 1
                }
            
            </remarks>
            <param name="request">Запрос на загрузку файла</param>
            <returns>Информация о загруженном файле</returns>
        </member>
        <member name="M:project.Controllers.FileController.UpdateFile(Domain.Contracts.FileContracts.UpdateFileRequest)">
            <summary>
            Обновление информации о файле
            </summary>
            <remarks>
            Пример запроса:
            
                PUT /api/File
                {
                    "IdFile": 1,
                    "FileName": "NewFileName.pdf",
                    "FileType": "application/pdf"
                }
            
            </remarks>
            <param name="request">Запрос на обновление файла</param>
            <returns>Результат операции</returns>
        </member>
        <member name="M:project.Controllers.FileController.DeleteFile(System.Int32)">
            <summary>
            Удаление файла
            </summary>
            <remarks>
            Пример запроса:
            
                DELETE /api/File/1
            
            </remarks>
            <param name="id">ID файла</param>
            <returns>Результат операции</returns>
        </member>
        <member name="M:project.Controllers.MessageController.GetMessagesByUser(System.Int32)">
             <summary>
             Получение сообщений пользователя
             </summary>
             <remarks>
             Пример запроса:
            
                 GET /api/Message/1
            
             </remarks>
             <param name="userId">ID пользователя</param>
             <returns>Список сообщений пользователя</returns>
        </member>
        <member name="M:project.Controllers.MessageController.SendMessage(Domain.Contracts.MessageContracts.SendMessageRequest)">
             <summary>
             Отправка нового сообщения
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /api/Message
                 {
                    "IdSender": 1,
                    "IdRecipient": 2,
                    "MessageText": "Привет, как дела?"
                 }
            
             </remarks>
             <param name="messageDto">Модель сообщения</param>
             <returns>Результат операции</returns>
        </member>
        <member name="M:project.Controllers.MessageController.GetMessagesBetweenUsers(System.Int32,System.Int32)">
            <summary>
            Получить все сообщения между двумя пользователями
            </summary>
            <param name="senderId">ID отправителя</param>
            <param name="recipientId">ID получателя</param>
            <returns>Список сообщений</returns>
        </member>
        <member name="M:project.Controllers.PostController.GetAllPosts">
             <summary>
             Получение всех постов
             </summary>
             <remarks>
             Пример запроса:
            
                 GET /api/Post
            
             </remarks>
             <returns>Список постов</returns>
        </member>
        <member name="M:project.Controllers.PostController.CreatePost(Domain.Contracts.PostContracts.CreatePostRequest)">
            <summary>
            Создание нового поста
            </summary>
            <remarks>
            Пример запроса:
            
                POST /api/Post
                {
                   "PostTitle" : "Заголовок поста",
                   "PostContent" : "Контент поста",
                   "IdUser" : 1
                }
            
            </remarks>
            <param name="postDto">Модель для создания поста</param>
            <returns>Созданный пост</returns>
        </member>
        <member name="M:project.Controllers.PostController.UpdatePost(Domain.Contracts.PostContracts.UpdatePostRequest)">
            <summary>
            Обновление поста
            </summary>
            <remarks>
            Пример запроса:
            
                PUT /api/Post
                {
                    "IdPost": 1,
                    "PostTitle": "Обновленный заголовок",
                    "PostContent": "Обновленный контент поста."
                }
            
            </remarks>
            <param name="request">Запрос на обновление поста</param>
            <returns>Результат операции</returns>
        </member>
        <member name="M:project.Controllers.PostController.DeletePost(System.Int32)">
            <summary>
            Удаление поста
            </summary>
            <remarks>
            Пример запроса:
            
                DELETE /api/Post/1
            
            </remarks>
            <param name="id">ID поста</param>
            <returns>Результат операции</returns>
        </member>
        <member name="M:project.Controllers.UserController.GetAllUsers">
            <summary>
            Получение всех пользователей
            </summary>
            <remarks>
            Пример запроса:
            
                GET /api/User
            
            </remarks>
            <returns>Список всех пользователей</returns>
        </member>
        <member name="M:project.Controllers.UserController.GetUserById(System.Int32)">
             <summary>
             Получение пользователя по ID
             </summary>
             <remarks>
             Пример запроса:
            
                 GET /api/User/1
            
             </remarks>
             <param name="id">ID пользователя</param>
             <returns>Информация о пользователе</returns>
        </member>
        <member name="M:project.Controllers.UserController.RegisterUser(Domain.Contracts.UserContracts.CreateUserRequest)">
            <summary>
            Регистрация нового пользователя
            </summary>
            <remarks>
            Пример запроса:
            
                POST /api/User
                {
                   "FirstName" : "Иван",
                   "LastName" : "Иванов",
                   "Email" : "ivanov@example.com",
                   "Password" : "!Pa$$word123"
                }
            
            </remarks>
            <param name="request">Данные для регистрации пользователя</param>
            <returns>Ответ с результатом операции</returns>
        </member>
        <member name="M:project.Controllers.UserController.CreateUser(Domain.Contracts.UserContracts.CreateUserRequest)">
            <summary>
            Создать нового пользователя
            </summary>
            <remarks>
            Пример запроса:
            
            POST /api/User
            {
                "FirstName": "Иван",
                "LastName": "Иванов",
                "Email": "ivanov@example.com",
                "Password": "StrongPassword123!"
            }
            </remarks>
            <param name="request">Запрос на создание пользователя</param>
            <returns>Созданный пользователь</returns>
        </member>
        <member name="M:project.Controllers.UserController.UpdateUser(System.Int32,Domain.Contracts.UserContracts.UpdateUserRequest)">
            <summary>
            Обновление информации о пользователе
            </summary>
            <remarks>
            Пример запроса:
            
                PUT /api/User/1
                {
                   "FirstName" : "Иван",
                   "LastName" : "Иванов",
                   "Email" : "ivanov_new@example.com"
                }
            
            </remarks>
            <param name="id">ID пользователя</param>
            <param name="request">Данные для обновления пользователя</param>
            <returns>Ответ с результатом операции</returns>
        </member>
        <member name="M:project.Controllers.UserController.DeleteUser(System.Int32)">
            <summary>
            Удаление пользователя
            </summary>
            <remarks>
            Пример запроса:
            
                DELETE /api/User/1
            
            </remarks>
            <param name="id">ID пользователя</param>
            <returns>Ответ с результатом операции</returns>
        </member>
        <member name="M:project.Controllers.UserController.GetUsersByRole(System.String)">
             <summary>
             Получение пользователей по роли
             </summary>
             <remarks>
             Пример запроса:
            
                 GET /api/User/byRole/Admin
            
             </remarks>
             <param name="role">Роль пользователя</param>
             <returns>Список пользователей с указанной ролью</returns>
        </member>
    </members>
</doc>
